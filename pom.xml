<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one or more
  ~ contributor license agreements.  See the NOTICE file distributed with
  ~ this work for additional information regarding copyright ownership.
  ~ The ASF licenses this file to You under the Apache License, Version 2.0
  ~ (the "License"); you may not use this file except in compliance with
  ~  he License.  You may obtain a copy of the License at
  ~
  ~      http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~  Unless required by applicable law or agreed to in writing, software
  ~  distributed under the License is distributed on an "AS IS" BASIS,
  ~  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~  See the License for the specific language governing permissions and
  ~  limitations under the License.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.apache</groupId>
        <artifactId>apache</artifactId>
        <version>19</version>
    </parent>

    <groupId>org.apache.dubbo</groupId>
    <artifactId>dubbo-admin</artifactId>
    <version>${revision}</version>
    <packaging>pom</packaging>

    <name>dubbo-admin</name>
    <description>Dubbo admin front and back end</description>
    <modules>
        <module>dubbo-admin-ui</module>
        <module>dubbo-admin-server</module>
        <module>dubbo-admin-distribution</module>
        <module>dubbo-admin-test</module>
    </modules>

    <properties>
        <revision>0.7.0-SNAPSHOT</revision>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <main.basedir>${project.basedir}</main.basedir>
        <commons-lang3-version>3.7</commons-lang3-version>
        <dubbo-version>3.2.5</dubbo-version>
        <fastjson-version>1.2.83</fastjson-version>
        <springfox-swagger-version>2.9.2</springfox-swagger-version>
        <jacoco-version>0.8.2</jacoco-version>
        <apollo-version>1.2.0</apollo-version>
        <guava-version>20.0</guava-version>
        <dubbo-mock-version>3.0.0</dubbo-mock-version>
        <mybatis-plus-boot-version>3.4.2</mybatis-plus-boot-version>
        <curator-test-veriosn>2.12.0</curator-test-veriosn>
        <lombok.version>1.18.30</lombok.version>

        <maven-checkstyle-plugin-version>3.0.0</maven-checkstyle-plugin-version>
        <spring-boot-version>2.3.12.RELEASE</spring-boot-version>
        <maven-compiler-plugin.version>3.6.0</maven-compiler-plugin.version>
        <maven-flatten-version>1.1.0</maven-flatten-version>
        <sorter-maven-plugin.version>1.0.1</sorter-maven-plugin.version>

        <java.version>1.8</java.version>
        <!--region maven compiler plugin config-->
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <maven.compiler.encoding>${project.build.sourceEncoding}</maven.compiler.encoding>
        <!--endregion-->
        <checkstyle.skip>true</checkstyle.skip>
        <rat.skip>true</rat.skip>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-parent</artifactId>
                <version>${spring-boot-version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.dubbo</groupId>
                <artifactId>dubbo-dependencies-bom</artifactId>
                <version>${dubbo-version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>com.ctrip.framework.apollo</groupId>
                <artifactId>apollo-openapi</artifactId>
                <version>${apollo-version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.dubbo</groupId>
                <artifactId>dubbo</artifactId>
                <version>${dubbo-version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${fastjson-version}</version>
            </dependency>
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger2</artifactId>
                <version>${springfox-swagger-version}</version>
            </dependency>
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger-ui</artifactId>
                <version>${springfox-swagger-version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava-version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.dubbo.extensions</groupId>
                <artifactId>dubbo-mock-api</artifactId>
                <version>${dubbo-mock-version}</version>
            </dependency>
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-boot-starter</artifactId>
                <version>${mybatis-plus-boot-version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.curator</groupId>
                <artifactId>curator-test</artifactId>
                <version>${curator-test-veriosn}</version>
            </dependency>
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <repositories>
        <repository>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
            <id>apache.snapshots.https</id>
            <name>Apache Development Snapshot Repository</name>
            <url>https://repository.apache.org/content/repositories/snapshots</url>
        </repository>
    </repositories>

    <build>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
                <version>${maven-flatten-version}</version>
                <configuration>
                    <!-- 设置为 true 表示在执行 flatten 操作时更新 POM 文件。 -->
                    <updatePomFile>true</updatePomFile>
                    <!-- 设置为 resolveCiFriendliesOnly，表示在扁平化过程中仅解析 CI 友好变量（如 ${revision}、${sha1} 和 ${changelist}）。 -->
                    <flattenMode>resolveCiFriendliesOnly</flattenMode>
                    <!-- 设置为 expand 表示在扁平化过程中展开依赖项。 -->
                    <pomElements>
                        <dependencies>expand</dependencies>
                    </pomElements>
                </configuration>
                <executions>
                    <execution>
                        <!-- 执行扁平化操作 -->
                        <id>flatten</id>
                        <!-- 指定要执行的目标，这里是 flatten。 -->
                        <goals>
                            <goal>flatten</goal>
                        </goals>
                        <!-- 指定在构建生命周期的哪个阶段执行这个目标，这里是在 process-resources 阶段。 -->
                        <phase>process-resources</phase>
                    </execution>
                    <execution>
                        <!-- 清理操作 -->
                        <id>flatten.clean</id>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                        <phase>clean</phase>
                    </execution>
                </executions>
            </plugin>
            <!-- 主要用于生成代码覆盖率报告 -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco-version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <phase>test</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.21.0</version>
            </plugin>
            <plugin>
                <groupId>io.github.tonycody.maven.plugins</groupId>
                <artifactId>sorter-maven-plugin</artifactId>
                <version>${sorter-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <!-- 这个目标会对 pom.xml 文件进行排序，根据插件的配置，按照一定的规则对元素进行排列。 -->
                            <goal>sort</goal>
                            <!-- 这个目标会对 pom.xml 文件进行清理，移除不必要的空行，并进行格式化，使文件更加整洁。 -->
                            <goal>clean</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>checkstyle</id>
            <activation>
                <!-- 这个条件指定了当 Maven 使用的 JDK 版本在 1.8 及以上时，自动激活这个 Profile。具体来说，[1.8,) 表示从 JDK 1.8 到任何更高的版本（不包括下界，即包含 1.8 及更高的版本）。 -->
                <jdk>[1.8,)</jdk>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <!-- 配置了 maven-checkstyle-plugin 插件，用于执行代码风格检查。 -->
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-checkstyle-plugin</artifactId>
                        <version>${maven-checkstyle-plugin-version}</version>
                        <!-- 定义了插件所需的依赖项。在这个例子中，插件依赖于 com.puppycrawl.tools 下的 checkstyle 库，版本为 8.18。 -->
                        <dependencies>
                            <dependency>
                                <groupId>com.puppycrawl.tools</groupId>
                                <artifactId>checkstyle</artifactId>
                                <version>8.18</version>
                            </dependency>
                        </dependencies>
                        <!-- 定义了插件的执行配置，包括执行阶段、目标和配置参数。 -->
                        <executions>
                            <execution>
                                <id>checkstyle-validation</id>
                                <goals>
                                    <!-- 定义了要执行的目标。在这个例子中，目标是 check，即运行 Checkstyle 检查。 -->
                                    <goal>check</goal>
                                </goals>
                                <!-- 指定了插件执行的生命周期阶段。在这里是 validate 阶段，这意味着在构建的验证阶段运行 Checkstyle 检查。 -->
                                <phase>validate</phase>
                                <configuration>
                                    <!-- 指定 Checkstyle 配置文件的位置。 -->
                                    <configLocation>codestyle/checkstyle.xml</configLocation>
                                    <!-- 设置文件编码为 UTF-8。 -->
                                    <encoding>UTF-8</encoding>
                                    <!-- 启用控制台输出，使检查结果显示在控制台中。 -->
                                    <consoleOutput>true</consoleOutput>
                                    <!-- 当发现违规时，构建失败。 -->
                                    <failOnViolation>true</failOnViolation>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <!-- apache-rat-plugin 是一个用于自动化验证项目文件许可和版权声明的 Maven 插件 -->
                        <groupId>org.apache.rat</groupId>
                        <artifactId>apache-rat-plugin</artifactId>
                        <version>0.12</version>
                        <executions>
                            <execution>
                                <id>verify.rat</id>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                                <phase>verify</phase>
                                <configuration>
                                    <excludes>
                                        <exclude>**/.mvn/**</exclude>
                                        <exclude>**/charts/**</exclude>
                                        <exclude>**/kubernetes/**</exclude>
                                        <exclude>**/*.versionsBackup</exclude>
                                        <exclude>**/.idea/</exclude>
                                        <exclude>**/*.iml</exclude>
                                        <exclude>**/*.txt</exclude>
                                        <exclude>**/*.sh</exclude>
                                        <exclude>**/*.bat</exclude>
                                        <exclude>**/*.md</exclude>
                                        <exclude>.git/</exclude>
                                        <exclude>**/*.git*</exclude>
                                        <exclude>.gitignore</exclude>
                                        <exclude>**/.settings/*</exclude>
                                        <exclude>**/.classpath</exclude>
                                        <exclude>**/*.properties</exclude>
                                        <exclude>**/.project</exclude>
                                        <exclude>**/target/**</exclude>
                                        <exclude>**/*.log</exclude>
                                        <exclude>CODE_OF_CONDUCT.md</exclude>
                                        <exclude>.codecov.yml</exclude>
                                        <exclude>.travis.yml</exclude>
                                        <exclude>PULL_REQUEST_TEMPLATE.md</exclude>
                                        <exclude>CONTRIBUTING.md</exclude>
                                        <exclude>**/codestyle/*</exclude>
                                        <exclude>**/node_modules/**</exclude>
                                        <exclude>**/.babelrc</exclude>
                                        <exclude>**/.editorconfig</exclude>
                                        <exclude>**/package-lock.json</exclude>
                                        <exclude>**/pnpm-lock.yaml</exclude>
                                        <exclude>**/package.json</exclude>
                                        <exclude>**/OpenSans.css</exclude>
                                        <exclude>**/.eslintignore</exclude>
                                        <exclude>**/.browserslistrc</exclude>
                                        <exclude>**/resources/META-INF/**</exclude>
                                        <exclude>**/src/main/resources/public/**</exclude>
                                        <exclude>**/src/licenses/**</exclude>
                                        <exclude>.github/**</exclude>
                                        <exclude>**/assets/**</exclude>
                                        <exclude>**/yarn.lock</exclude>
                                        <exclude>**/node/**</exclude>
                                        <exclude>**/dubbo-admin-info.json</exclude>
                                        <exclude>.asf.yaml</exclude>
                                        <exclude>deploy/**</exclude>
                                    </excludes>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
